xp.tdungan.final.supertimeline <- read.csv("~/xp-tdungan-final-supertimeline.csv")
View(xp.tdungan.final.supertimeline)
class(xp.tdungan.final.supertimeline)
head(xp.tdungan.final.supertimeline)
head(xp.tdungan.final.supertimeline[2])
xp.tdungan.final.supertimeline[2][1]
table(xp.tdungan.final.supertimeline[2])
as.dataframe(table(xp.tdungan.final.supertimeline[2]))
as.data.frame(table(xp.tdungan.final.supertimeline[2]))
timedist <- as.data.frame(table(xp.tdungan.final.supertimeline[2]))
datedist <- as.data.frame(table(xp.tdungan.final.supertimeline[1]))
df <- data.frame(time = 1:10, a = cumsum(rnorm(10)),
b = cumsum(rnorm(10)),
c = cumsum(rnorm(10))))
df <- data.frame(time = 1:10, a = cumsum(rnorm(10)),
b = cumsum(rnorm(10)),
c = cumsum(rnorm(10)))
df
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
require(ggplot2)
install.packages("ggplot2")
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
require(ggplot2)
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
require(reshape)
require(reshape2)
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
df
dfdf
ggplot(df, aes(time,value)) + geom_line(aes(colour = series))
ggplot(dfdf, aes(time,value)) + geom_line(aes(colour = series))
dfdf
head(dfdf)
ggplot(df, aes(time,value)) + geom_line(aes(colour = variable))
require(reshape)
install.packages("reshape")
require(reshape)
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
dfdf
head(dfdf)
ggplot(dfdf, aes(time,value)) + geom_line(aes(colour = series))
dfdf <- melt(df ,  id = 'time', variable_name = 'series')
View(datedist)
ggplot(datedist,aes(Var1,Freq))
head(datedist)
view(dfdf)
View(dfdf)
View(df)
datedistforplot <- melt(datedist, id = 'Vae1', variable_name = 'series')
datedistforplot <- melt(datedist, id = 'Var1', variable_name = 'series')
View(datedistforplot)
ddfp <- datedistforplot[2:]
ddfp <- datedistforplot[2]
class(datedistforplot)
datadistforplot[2,]
datedistforplot[2,]
datedistforplot[2:,]
datedistforplot[2:10,]
datedistforplot[2:150,]
datedistforplot[2:148,]
datedistforplot[1,]
supertimeline <- read.csv("~/xp-tdungan-final-supertimeline.csv")
View(supertimeline)
supertimeline <- read.csv("~/xp-tdungan-final-supertimeline.csv")
View(supertimeline)
datedist <- as.data.frame(table(supertimeline[1]))
View(datedist)
datedistforplot <- melt(datedist, id = 'Var1', variable_name = 'series')
View(datedistforplot)
ggplot(datedist,aes(Var1,Freq))
ggplot(datedistforplot,aes(Var1,Freq))
ggplot(datedistforplot,aes(Var1,Freq)) + geom_line(aes(colour = series))
ggplot(datedistforplot,aes(Var1,value)) + geom_line(aes(colour = series))
max(datedist[Freq])
max(datedist[Freq])
max(datedist["Freq"])
datedist["Freq"=59]
datedist["Freq"==59]
datedist["Freq"=='59']
datedist["Freq"=='59',]
datedist["Freq"==59,]
datedist[,"Freq"==59]
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x <- 1:4
x
y <- 2
y
x
x+y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x < 6] <- 0
x
hw1_data <- read.csv("~/R/hw1_data.csv")
View(hw1_data)
head(hw1_data)
head(hw1_data,2)
count(hw1_data)
nrow(hw1_data)
tail(hw1_data,2)
row.names
row.names(4)
hw1_data[[4]]
hw1_data[4
]
hw1_data.row.names(4)
hw1_data.names(4)
hw1_data(4)
hw1_data.names[4,]
hw1_data[4,]
hw1_data[47,]
hw1_data[47,1]
hw1_data[x == 41, ]
hw1_data[hw1_data$Ozone == 41, ]
na.omit(hw1_data)
na.omit(hw1_data[,1])
na.omit(hw1_data[,1])[1]
nrow(na.omit(hw1_data[,1]))
ncol
ncol(na.omit(hw1_data[,1]))
na.omit(hw1_data[,1])
x <- na.omit(hw1_data[,1])
view(x)
x
x[,2]
x[2]
ncol(x)
nrow(x)
table(X)
table(x)
hw1_data
hw1_data[,1]
mean(x)
subset(hw1_data,Ozon>31 & Temp > 90)
subset(hw1_data,hw1_data$Ozon>31 & hw1_data$Temp > 90)
subset(hw1_data,hw1_data$Ozon>31 & hw1_data$Temp > 90)
x <- subset(hw1_data,hw1_data$Ozon>31 & hw1_data$Temp > 90)
xs
x
mean(x[,2])
x <- subset(hw1_data,hw1_data$Month = 6)
x <- subset(hw1_data, hw1_data$Month == 6)
x
x["Temp"]
mean(x["Temp"])
mean(x[,4])
max()
x <- subset(hw1_data, hw1_data$Month == 5)
max(x[,1])
x[,1]
na.omit(x[,1])
max(na.omit(x[,1]))
cube <- function(x,n){
x^3
}
cube(3)
x <- 1:10
if (x > 5) {
x <- 0
}
x <- 0
if (x > 5) {
x <- 0
}
x <- 1:10
if (x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z
z <- 10
f(3)
z <- 100
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
